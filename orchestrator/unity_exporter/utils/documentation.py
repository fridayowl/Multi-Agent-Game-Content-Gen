#!/usr/bin/env python3
"""
Documentation generator
Creates comprehensive documentation for exported Unity packages
"""

from typing import Dict, Any
from pathlib import Path
import logging

class DocumentationGenerator:
    """Handles documentation generation for Unity exports"""
    
    def __init__(self, output_dir: Path, logger: logging.Logger):
        self.output_dir = output_dir
        self.logger = logger
    
    async def generate_documentation(self, project_name: str, world_spec: Dict[str, Any], 
                                   characters: Dict[str, Any], quests: Dict[str, Any], 
                                   assets: Dict[str, Any]) -> str:
        """Generate comprehensive documentation"""
        
        self.logger.info("📝 Generating documentation...")
        
        documentation = f'''# Generated Game Unity Package Documentation

## Project Overview
This Unity package contains a complete game generated by the Multi-Agent Game Content Pipeline.

### World Information
- **Theme**: {world_spec.get('theme', 'Unknown')}
- **Size**: {world_spec.get('size', [0, 0])}
- **Buildings**: {len(world_spec.get('buildings', []))}
- **Natural Features**: {len(world_spec.get('natural_features', []))}

### Characters
- **Total NPCs**: {len(characters.get('characters', []))}
- **Unique Personalities**: Generated with AI
- **Dialogue Systems**: Interactive conversation trees

### Quest System
- **Total Quests**: {len(quests.get('quests', []))}
- **Quest Types**: Main storylines and side quests
- **Interconnected**: Quests reference each other and NPCs

## Installation Instructions

1. **Import Package**
   - Open Unity 2022.3 LTS or newer
   - Go to Assets > Import Package > Custom Package
   - Select the .unitypackage file
   - Import all assets

2. **Open Scene**
   - Navigate to Assets/Scenes/
   - Open "GeneratedGameScene"

3. **Play the Game**
   - Press Play button in Unity
   - Use WASD to move
   - Use mouse to look around
   - Press E to interact with NPCs
   - Press ESC to unlock/lock cursor

## Generated Scripts

### Core Systems
- **GameManager.cs**: Main game controller
- **PlayerController.cs**: First-person player movement
- **WorldManager.cs**: World state management

### NPC Systems  
- **NPCController.cs**: NPC behavior and interaction
- **DialogueSystem.cs**: Conversation management

### Quest Systems
- **QuestManager.cs**: Quest tracking and completion

## File Structure
```
Assets/
├── Scenes/
│   └── GeneratedGameScene.unity
├── Scripts/
│   ├── GameManager.cs
│   ├── PlayerController.cs
│   ├── WorldManager.cs
│   ├── NPCController.cs
│   ├── DialogueSystem.cs
│   └── QuestManager.cs
├── Textures/
│   └── [AI-generated textures]
└── Materials/
    └── [Generated materials]
```

## Controls
- **WASD**: Move
- **Mouse**: Look around
- **E**: Interact with NPCs
- **ESC**: Toggle cursor lock

## Customization
All scripts are fully editable. You can:
- Modify NPC behaviors in NPCController.cs
- Add new quests in QuestManager.cs
- Customize player movement in PlayerController.cs
- Extend dialogue system in DialogueSystem.cs

## Character Details
'''
        
        # Add character details if available
        if characters.get('characters'):
            documentation += "\n### Generated NPCs\n"
            for char in characters.get('characters', [])[:5]:  # Show first 5
                documentation += f"- **{char.get('name', 'Unknown')}**: {char.get('role', 'Unknown role')}\n"
                if char.get('personality'):
                    personality = char.get('personality', {})
                    trait = personality.get('primary_trait', 'friendly')
                    documentation += f"  - Personality: {trait}\n"
        
        # Add quest details if available
        if quests.get('quests'):
            documentation += "\n### Generated Quests\n"
            for quest in quests.get('quests', [])[:5]:  # Show first 5
                documentation += f"- **{quest.get('title', 'Unknown Quest')}**: {quest.get('description', 'No description')}\n"
                documentation += f"  - Type: {quest.get('quest_type', 'unknown')}\n"
        
        documentation += f'''

## Technical Notes
- Generated by Multi-Agent Game Content Pipeline v4.0
- Compatible with Unity 2022.3 LTS and newer
- All scripts use standard Unity APIs
- Modular design for easy customization

## Support
For issues or questions about this generated content:
1. Check the Unity console for debug messages
2. Verify all scripts are properly assigned
3. Ensure the scene is properly set up

Generated on: {project_name}
'''
        
        doc_path = self.output_dir / f"{project_name}_Documentation.md"
        with open(doc_path, 'w') as f:
            f.write(documentation)
        
        self.logger.info(f"   ✅ Documentation created: {doc_path.name}")
        return str(doc_path)